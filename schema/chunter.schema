%% -*- erlang -*-


{mapping, "paralell_uploads", "fifo_s3.upload_pool_size",
 [{default, 5},
  {datatype, integer}]}.

{mapping, "max_paralell_uploads", "fifo_s3.upload_pool_max",
 [{default, 10},
  {datatype, integer}]}.

{mapping, "preload", "fifo_s3.download_preload_chunks",
 [{default, 2},
  {datatype, integer}]}.

{mapping, "paralell_downloads", "fifo_s3.download_pool_size",
 [{default, 5},
  {datatype, integer}]}.

{mapping, "max_paralell_downloads", "fifo_s3.download_pool_max",
 [{default, 10},
  {datatype, integer}]}.


{mapping, "s3_upload_chunk_size", "chunter.upload_chunk",
 [{default, "1MB"},
  {datatype, bytesize}]}.

{mapping, "s3_download_chunk_size", "chunter.download_chunk",
 [{default, "1MB"},
  {datatype, bytesize}]}.

%% @doc The interval the zones are checked for their state, this means running
%% `zoneadm list -ip` on the node. This is only required if a change is missed
%% due to some hickup but it ensures that the state of zones is always up to
%% date.
%% Generally the more often this happen the less are the chances a state is
%% misrepresented but the higher is the load on the system.
%% This operation is fairly inexpensive.
{mapping, "zonemon_interval", "chunter.zonemon_interval",
 [{default, "1s"},
  {datatype, {duration, ms}}]}.


%% @doc The interval in which the zpool is checked for degrated disks. This
%% is a more expensive opperation so should be executed not too frequently,
%% generaly a interval of 15s means that worst case a degraded pool stays
%% undetected for 15s.
{mapping, "zpool_interval", "chunter.zpool_interval",
 [{default, "15s"},
  {datatype, {duration, ms}}]}.


%% @doc The interval in which the systems ARC status is checked, this is
%% purely informational and slowly changing a higher interval is usually
%% not a issue.
{mapping, "arc_interval", "chunter.arc_interval",
 [{default, "30s"},
  {datatype, {duration, ms}}]}.


%% @doc The port And IP chunter does listen on, usually it will be
%% auto detected as the first network iterface in the system, if it still
%% needs to be changed it can be done here.
{mapping, "ip", "chunter.endpoint",
 [{commented, {"127.0.0.1", 4200}},
  {datatype, ip}]}.

{translation,
 "chunter.ip",
 fun(Conf) ->
         case cuttlefish_util:conf_get_value("ip", Conf) of
             {IP, _Port} ->
                 [A, B, C, D] = [list_to_integer(O) ||
                                    O <- re:split(IP, "\\.", [{return, list}])],
                 {ok, {A, B, C, D}};
             _ ->
                 undefined
         end
 end
}.

{translation,
 "chunter.port",
 fun(Conf) ->
         case cuttlefish_util:conf_get_value("ip", Conf) of
             {_IP, Port} ->
                 {ok, Port};
             _ ->
                 undefined
         end
 end
}.

{translation,
 "mdns_client_lib.interface",
 fun(Conf) ->
         case cuttlefish_util:conf_get_value("ip", Conf) of
             {IP, _Port} ->
                 [A, B, C, D] = [list_to_integer(O) ||
                                    O <- re:split(IP, "\\.", [{return, list}])],
                 {ok, {A, B, C, D}};
             _ ->
                 undefined
         end
 end
}.

{mapping, "dump_dir", "vm_args.-env ERL_CRASH_DUMP",
 [{default, "{{log_path}}"}]}.
